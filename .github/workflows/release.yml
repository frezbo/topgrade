name: CD Native

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt, clippy
      # - uses: actions-rs/cargo@v1.0.1
      #   name: Check format
      #   with:
      #     command: fmt
      #     args: --all -- --check
      # - uses: actions-rs/cargo@v1.0.1
      #   name: Run clippy
      #   with:
      #     command: clippy
      #     args: --all-targets --locked -- -D warnings
      # - uses: actions-rs/cargo@v1.0.1
      #   name: Run clippy (All features)
      #   with:
      #     command: clippy
      #     args: --all-targets --locked --all-features -- -D warnings
      # - uses: actions-rs/cargo@v1.0.1
      #   name: Run tests
      #   with:
      #     command: test
      - uses: actions-rs/cargo@v1.0.1
        name: Build
        with:
          command: build
          args: --release --all-features
      - name: Rename Release (Unix)
        run: |
          cargo install default-target
          mkdir assets
          FILENAME=topgrade-${{github.ref}}-$(default-target)
          mv target/release/topgrade asserts/$FILENAME
          cd asserts
          gzip $FILENAME
          ls assets
        if: ${{ matrix.platform != 'windows-latest' }}
      - name: Rename Release (Windows)
        run: |
          cargo install default-target
          mkdir assets
          FILENAME=topgrade-${{github.ref}}-$(default-target).exe
          mv target/release/topgrade.exe asserts/$FILENAME
          ls assets
        if: ${{ matrix.platform == 'windows-latest' }}
